{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/phase-3/Poject-Management--Client/src/components/UserDropDown.js\";\nimport React from \"react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n//pass this function a set helper function to update state and the current state.[fill in the title] as a prop so it can update the title shown on the button. Also needs User list to generate menu options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserDropDown(_ref) {\n  let {\n    onSetUser,\n    buttonTitle,\n    userList,\n    userType\n  } = _ref;\n  const menuItems = userList.map(e => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n    href: \"#/action-1\",\n    onClick: event => onSetUser(event.target.textContent),\n    children: e.name\n  }, e.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(DropdownButton, {\n    style: {\n      borderstyle: \"solid\"\n    },\n    variant: \"light\",\n    id: \"dropdown-basic-button\",\n    title: buttonTitle ? `Creator: ${buttonTitle}` : `${userType}: Choose an existing User!`,\n    children: menuItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = UserDropDown;\nvar _c;\n$RefreshReg$(_c, \"UserDropDown\");","map":{"version":3,"names":["React","DropdownButton","Dropdown","jsxDEV","_jsxDEV","UserDropDown","_ref","onSetUser","buttonTitle","userList","userType","menuItems","map","e","Item","href","onClick","event","target","textContent","children","name","id","fileName","_jsxFileName","lineNumber","columnNumber","style","borderstyle","variant","title","_c","$RefreshReg$"],"sources":["/home/user/Development/phase-3/Poject-Management--Client/src/components/UserDropDown.js"],"sourcesContent":["import React from \"react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n//pass this function a set helper function to update state and the current state.[fill in the title] as a prop so it can update the title shown on the button. Also needs User list to generate menu options\n\nexport default function UserDropDown({\n  onSetUser,\n  buttonTitle,\n  userList,\n  userType,\n}) {\n  const menuItems = userList.map((e) => (\n    <Dropdown.Item\n      key={e.id}\n      href=\"#/action-1\"\n      onClick={(event) => onSetUser(event.target.textContent)}\n    >\n      {e.name}\n    </Dropdown.Item>\n  ));\n\n  return (\n    <DropdownButton\n      style={{ borderstyle: \"solid\" }}\n      variant=\"light\"\n      id=\"dropdown-basic-button\"\n      title={\n        buttonTitle\n          ? `Creator: ${buttonTitle}`\n          : `${userType}: Choose an existing User!`\n      }\n    >\n      {menuItems}\n    </DropdownButton>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,QAAQ,MAAM,0BAA0B;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAKjC;EAAA,IALkC;IACnCC,SAAS;IACTC,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,SAAS,GAAGF,QAAQ,CAACG,GAAG,CAAEC,CAAC,iBAC/BT,OAAA,CAACF,QAAQ,CAACY,IAAI;IAEZC,IAAI,EAAC,YAAY;IACjBC,OAAO,EAAGC,KAAK,IAAKV,SAAS,CAACU,KAAK,CAACC,MAAM,CAACC,WAAW,CAAE;IAAAC,QAAA,EAEvDP,CAAC,CAACQ;EAAI,GAJFR,CAAC,CAACS,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAMZ,CAAC;EAEF,oBACEtB,OAAA,CAACH,cAAc;IACb0B,KAAK,EAAE;MAAEC,WAAW,EAAE;IAAQ,CAAE;IAChCC,OAAO,EAAC,OAAO;IACfP,EAAE,EAAC,uBAAuB;IAC1BQ,KAAK,EACHtB,WAAW,GACN,YAAWA,WAAY,EAAC,GACxB,GAAEE,QAAS,4BACjB;IAAAU,QAAA,EAEAT;EAAS;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAACK,EAAA,GA9BuB1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}